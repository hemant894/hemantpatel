package homework2;

public class Topic5 {public static void main(String[] args ){System.out.println("$$$$$$$$$===Agile Model===$$$$$$$$$$$$");
System.out.println(" =====> Methodology that promotes continuous iteration and incremental of development and testing throughout the SDLC of the project.");
System.out.println(" =====> Both development and testing activities are simultaneously and in one team.");
System.out.println(" $$$$$$$$$$$$$$$$$$$$ SCRUM$$$$$$$$$$$$$$$$$$$$$");
System.out.println(" =====> Framework through which we will develop and test the software in Agile process.");
System.out.println(" ============= THE 4 AGILE VALUES ==============");
System.out.println(" 1.... Individual and Interactions. 2..... Working software. 3.... Customer collaboration. 4..... Responding to Change.");
System.out.println(" ************* SCRUM TERMINOLOGY *****************");
System.out.println(" Product back log : Defined by Product owner which contains the requirements from the customers in list of user stories in order of importance.");
System.out.println(" Sprint/Iteration : Period of time to complete user stories, decided by product owner and team , usally between 2-4 weeks. ");
System.out.println(" Sprint backlog   : Contains list of committed stories by Developer or tester for specific sprint.");
System.out.println(" Burndown Chart   : Shows how much work is remaining in the sprint, which is maintained by the scrum master daily.");
System.out.println(" ============= AGILE/SCRUM TEAM =================");
System.out.println(" Scrum Team : 1. product owner 2. Scrum Master 3. Developer 4. Testers. ");
System.out.println(" @@@@@@@@@@@   Agile Meetings   @@@@@@@@@@@@@");
System.out.println(" Sprint planing ");
System.out.println(" Daily Stand up / Daily Scrum ");
System.out.println(" Sprint Demo/ Showcase ");
System.out.println("Sprint Retrospective");
System.out.println(" Advantages of Agile Scrum");
System.out.println(" 1==Customer will get release very frequently.");
System.out.println(" 2==Save time and cost.");
System.out.println(" 3==Change request/Requirement changes can be accepted anytime.");
System.out.println(" 4==Quality is ensured and customer satisfaction is maintained.");
System.out.println(" ****** Dis-advantages of Agile Scrum **********");
System.out.println(" *** 1. planning can be less concrete.");
System.out.println(" *** 2. Team must be knowledgeable.");
System.out.println(" *** 3. Less focus on design and documentation.");
System.out.println(" *** 4. Final product be very different.");
System.out.println(" what is definition of Done?");
System.out.println(" Definition of done is when all conditions or acceptance criteria that a software product must satisfy are met and ready to be accepted by user,customer,team or consuming system.");
System.out.println(" Who Creates Definition of done?");
System.out.println(" The Definition of done created by the scrum team.");
System.out.println(" Why we need definition of done?");
System.out.println(" We must meet the definition of done to ensure quality. it lower rework.");
System.out.println(" What is TDD?");
System.out.println(" TDD means Test Driven Development. Test Driven Development start with developing test for each one of the features.The test might fail as the tests are developed even before the development.Development team then develop and refactors the code to pass the test. ");
System.out.println(" What is BDD?");
System.out.println(" BDD means Behaviour Driven Development. BDD is a software Development Methodology in which an application is specified and designed by describing how is behaviour should appear to an outside observer.");
System.out.println(" Benefits of TDD : ");
System.out.println(" ==>> Much less debug time.");
System.out.println(" ==>> Code proven to meet requirements.");
System.out.println(" ==>> Test become safety net.");
System.out.println(" ==>> Near Zero Defects.");
System.out.println(" == Benefits of BDD :- ");
System.out.println(" BDD if offers more precise guidance on organizing the conversation between developers, testers.");
System.out.println(" Given-When-Then format , are closer to every day language.");
System.out.println(" Requirement becomes easy to understand and communicate.");
System.out.println(" What is 'GHERKIN?'");
System.out.println(" Gherkin is the plain-text English language that cucumber can understands.");
System.out.println(" it is business Readable.");
System.out.println(" Gherkin serve two purpose - documentation and automated tests.");
System.out.println(" Gherkin is designed to be easy to learn by non-programmers.");
System.out.println(" In Gherkin each line start with a Gherkin keyword.");
System.out.println(" BDD KEYWORDS : - feature keyword, Background keyword, scenario keyword, Given keyword, When keyword, Then keyword, And keyword, But keyword, Scenario outline keyword.");
System.out.println(" I am learning how to use git?");

}
}
